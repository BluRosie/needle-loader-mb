	.include "../asm/macros/function.inc"
	.include "../constants/gba_constants.inc"
	.text
	.syntax unified

	arm_func_start _start
_start: @ 0x02018000
	b _init
	.global gRomHeader
gRomHeader:
	.byte 0x24, 0xFF, 0xAE, 0x51, 0x69, 0x9A, 0xA2, 0x21, 0x3D, 0x84, 0x82, 0x0A
	.byte 0x84, 0xE4, 0x09, 0xAD, 0x11, 0x24, 0x8B, 0x98, 0xC0, 0x81, 0x7F, 0x21, 0xA3, 0x52, 0xBE, 0x19
	.byte 0x93, 0x09, 0xCE, 0x20, 0x10, 0x46, 0x4A, 0x4A, 0xF8, 0x27, 0x31, 0xEC, 0x58, 0xC7, 0xE8, 0x33
	.byte 0x82, 0xE3, 0xCE, 0xBF, 0x85, 0xF4, 0xDF, 0x94, 0xCE, 0x4B, 0x09, 0xC1, 0x94, 0x56, 0x8A, 0xC0
	.byte 0x13, 0x72, 0xA7, 0xFC, 0x9F, 0x84, 0x4D, 0x73, 0xA3, 0xCA, 0x9A, 0x61, 0x58, 0x97, 0xA3, 0x27
	.byte 0xFC, 0x03, 0x98, 0x76, 0x23, 0x1D, 0xC7, 0x61, 0x03, 0x04, 0xAE, 0x56, 0xBF, 0x38, 0x84, 0x00
	.byte 0x40, 0xA7, 0x0E, 0xFD, 0xFF, 0x52, 0xFE, 0x03, 0x6F, 0x95, 0x30, 0xF1, 0x97, 0xFB, 0xC0, 0x85
	.byte 0x60, 0xD6, 0x80, 0x25, 0xA9, 0x63, 0xBE, 0x03, 0x01, 0x4E, 0x38, 0xE2, 0xF9, 0xA2, 0x34, 0xFF
	.byte 0xBB, 0x3E, 0x03, 0x44, 0x78, 0x00, 0x90, 0xCB, 0x88, 0x11, 0x3A, 0x94, 0x65, 0xC0, 0x7C, 0x63
	.byte 0x87, 0xF0, 0x3C, 0xAF, 0xD6, 0x25, 0xE4, 0x8B, 0x38, 0x0A, 0xAC, 0x72, 0x21, 0xD4, 0xF8, 0x07
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x47, 0x42, 0x4A
	.byte 0x30, 0x31, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00
_init:
	mov r0, #0x12
	msr cpsr_fc, r0
	ldr sp, _020180F8 @=0x03007F80
	mov r0, #0x1f
	msr cpsr_fc, r0
	ldr sp, _020180F4 @=0x03007C00
	ldr r1, _02018200 @=INTR_VECTOR
	adr r0, _intr
	str r0, [r1]
	ldr r1, _02018204 @=AgbMain
	mov lr, pc
	bx r1
	b _init
	.align 2, 0

_020180F4: .4byte 0x03007C00
_020180F8: .4byte 0x03007F80

	arm_func_start _intr
_intr: @ 0x020180FC
	mov r3, #0x4000000
	add r3, r3, #0x200
	ldr r2, [r3]
	ldrh r1, [r3, #8]
	mrs r0, spsr
	push {r0, r1, r2, r3, lr}
	mov r0, #1
	strh r0, [r3, #8]
	and r1, r2, r2, lsr #16
	mov ip, #0
	ands r0, r1, #0xC0
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #1
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #2
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #4
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #0x100
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #0x200
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #0x400
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #0x800
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #0x1000
	bne _0201819C
	add ip, ip, #4
	ands r0, r1, #0x2000
	strbne r0, [r3, #-0x17c]
_02018198:
	bne _02018198
_0201819C:
	strh r0, [r3, #2]
	mov r1, #0x20c0
	bic r2, r2, r0
	and r1, r1, r2
	strh r1, [r3]
	mrs r3, apsr
	bic r3, r3, #0xdf
	orr r3, r3, #0x1f
	msr cpsr_fc, r3
	ldr r1, _02018208 @=gIntrTable
	add r1, r1, ip
	ldr r0, [r1]
	stmdb sp!, {lr}
	adr lr, _intr_ret
	bx r0
_intr_ret: @ 0x020181D8
	ldm sp!, {lr}
	mrs r3, apsr
	bic r3, r3, #0xdf
	orr r3, r3, #0x92
	msr cpsr_fc, r3
	pop {r0, r1, r2, r3, lr}
	strh r2, [r3]
	strh r1, [r3, #8]
	msr spsr_fc, r0
	bx lr
	.align 2, 0


_02018200: .4byte INTR_VECTOR
_02018204: .4byte AgbMain
_02018208: .4byte gIntrTable
